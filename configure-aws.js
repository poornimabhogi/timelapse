#!/usr/bin/env node

/**
 * AWS Configuration Helper for Timelapse App
 * This script helps you configure your AWS resources manually
 */

const fs = require('fs');
const path = require('path');
const readline = require('readline');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

console.log('ðŸ”§ AWS Configuration Helper for Timelapse App');
console.log('================================================');
console.log('');
console.log('This script will help you configure your AWS resources.');
console.log('You can get these values from your AWS Console or Terraform outputs.');
console.log('');

async function question(prompt) {
  return new Promise((resolve) => {
    rl.question(prompt, resolve);
  });
}

async function configureAWS() {
  try {
    console.log('Please provide your AWS resource details:');
    console.log('');

    const region = await question('AWS Region (default: us-east-1): ') || 'us-east-1';
    const userPoolId = await question('Cognito User Pool ID (e.g., us-east-1_AbCdEfGhI): ');
    const clientId = await question('Cognito App Client ID: ');
    const identityPoolId = await question('Cognito Identity Pool ID (e.g., us-east-1:12345678-1234-1234-1234-123456789012): ');
    const s3Bucket = await question('S3 Bucket Name: ');
    const appsyncEndpoint = await question('AppSync GraphQL Endpoint (optional): ') || '';
    const appsyncApiKey = await question('AppSync API Key (optional): ') || '';
    const apiGatewayEndpoint = await question('API Gateway Endpoint (optional): ') || '';

    // Create .env file
    const envContent = `# AWS Configuration for Timelapse App
# Generated by configure-aws.js

REACT_APP_AWS_REGION=${region}
REACT_APP_COGNITO_USER_POOL_ID=${userPoolId}
REACT_APP_COGNITO_CLIENT_ID=${clientId}
REACT_APP_COGNITO_IDENTITY_POOL_ID=${identityPoolId}
REACT_APP_S3_BUCKET=${s3Bucket}
REACT_APP_APPSYNC_ENDPOINT=${appsyncEndpoint}
REACT_APP_APPSYNC_API_KEY=${appsyncApiKey}
REACT_APP_API_GATEWAY_ENDPOINT=${apiGatewayEndpoint}
REACT_APP_ENVIRONMENT=prod
`;

    fs.writeFileSync('.env', envContent);
    console.log('');
    console.log('âœ… Configuration saved to .env file');
    console.log('');
    console.log('Next steps:');
    console.log('1. Restart your React Native app');
    console.log('2. Your app will now use real AWS resources');
    console.log('');
    console.log('Note: The app will still use the mock functions in aws-config.ts');
    console.log('      To use real AWS services, update the aws-config.ts functions');
    console.log('      to call actual AWS APIs instead of mock implementations.');
    
  } catch (error) {
    console.error('Error configuring AWS:', error);
  } finally {
    rl.close();
  }
}

// Run if called directly
if (require.main === module) {
  configureAWS();
}

module.exports = { configureAWS }; 