type User @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  username: String!
  email: String!
  profilePicture: String
  bio: String
  following: [ID!]!
  followers: [ID!]!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

type Timelapse @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  userId: ID!
  title: String!
  description: String
  mediaUrls: [String!]!
  type: String!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  status: String!
  metadata: AWSJSON
  likes: Int!
  comments: Int!
  user: User! @hasOne(fields: ["userId"], references: ["id"])
}

type Like @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  userId: ID!
  timelapseId: ID!
  createdAt: AWSDateTime!
  user: User! @hasOne(fields: ["userId"], references: ["id"])
  timelapse: Timelapse! @hasOne(fields: ["timelapseId"], references: ["id"])
}

type Comment @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  userId: ID!
  timelapseId: ID!
  content: String!
  createdAt: AWSDateTime!
  user: User! @hasOne(fields: ["userId"], references: ["id"])
  timelapse: Timelapse! @hasOne(fields: ["timelapseId"], references: ["id"])
}

type Follow @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  followerId: ID!
  followingId: ID!
  createdAt: AWSDateTime!
  follower: User! @hasOne(fields: ["followerId"], references: ["id"])
  following: User! @hasOne(fields: ["followingId"], references: ["id"])
}

type FeaturePost @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  userId: ID!
  text: String!
  mediaUrls: [String!]!
  likes: Int!
  comments: [Comment!]!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  user: User! @hasOne(fields: ["userId"], references: ["id"])
}

type Query {
  getSocialFeed(userId: ID!, limit: Int, nextToken: String): ModelTimelapseConnection
  getUserTimelapses(userId: ID!, limit: Int, nextToken: String): ModelTimelapseConnection
  getFollowingTimelapses(userId: ID!, limit: Int, nextToken: String): ModelTimelapseConnection
  getFeaturePosts(limit: Int, nextToken: String): ModelFeaturePostConnection
}

type Subscription {
  onCreateTimelapse(userId: ID): Timelapse @aws_subscribe(mutations: ["create"])
  onCreateLike(timelapseId: ID): Like @aws_subscribe(mutations: ["create"])
  onCreateComment(timelapseId: ID): Comment @aws_subscribe(mutations: ["create"])
  onCreateFeaturePost: FeaturePost @aws_subscribe(mutations: ["create"])
} 